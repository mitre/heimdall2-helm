apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "heimdall.fullname" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: heimdall
spec:
  serviceName: {{ template "heimdall.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "heimdall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: heimdall
  template:
    metadata:
      {{- with .Values.heimdall.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "heimdall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: heimdall
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.heimdall.podSecurityContext | nindent 8 }}
      volumes:
        - name: injected-certs
          configMap:
            name: {{ .Values.certs.name }}
        {{- range $index, $path := .Values.certs.processedCertsMountPaths }}
        - name: "processed-certs-{{ $index }}"
          emptyDir:
        {{- end }}
      initContainers:
        - name: setup-certs
          securityContext:
            {{- toYaml .Values.certs.securityContext | nindent 12 }}
          image: "{{ .Values.certs.image.repository }}:{{ .Values.certs.image.tag }}"
          imagePullPolicy: {{ .Values.certs.image.pullPolicy }}
          command: {{ .Values.certs.command }}
          volumeMounts:
            - name: injected-certs
              mountPath: {{ .Values.certs.injectedCertsMountPath }}
            {{- range $index, $path := .Values.certs.processedCertsMountPaths }}
            - name: "processed-certs-{{ $index }}"
              mountPath: {{ $path }}
            {{- end }}
      containers:
        - name: heimdall-front
          securityContext:
            {{- toYaml .Values.heimdall.securityContext | nindent 12 }}
          image: "{{ .Values.heimdall.image.repository }}:{{ .Values.heimdall.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.heimdall.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
          volumeMounts:
            {{- range $index, $path := .Values.certs.processedCertsMountPaths }}
            - name: "processed-certs-{{ $index }}"
              mountPath: {{ $path }}
              readOnly: true
            {{- end }}
          env:
            - name: NODE_ENV
              value: {{ .Values.nodeEnv | quote }}
            - name: MAX_FILE_UPLOAD_SIZE
              value: {{ .Values.maxFileUploadSize | quote }}
            - name: DATABASE_HOST
            {{- if .Values.postgresql.enabled }}
              value: {{ template "heimdall.fullname" . }}-postgresql
            {{- else }}
              value: {{.Values.databaseHost | quote }}
            {{- end }}
            - name: DATABASE_PORT
            {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.service.port | quote }}
            {{- else }}
              value: {{.Values.databasePort | quote }}
            {{- end }}
            - name: DATABASE_NAME
              value: {{ .Values.databaseName | quote }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databaseUsername
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databasePassword
            - name: DATABASE_SSL
              value: {{ .Values.databaseSsl | quote }}
            - name: DATABASE_SSL_INSECURE
              value: {{ .Values.databaseSslInsecure | quote }}
            - name: DATABASE_SSL_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databaseSslKey
            - name: DATABASE_SSL_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databaseSslCert
            - name: DATABASE_SSL_CA
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: databaseSslCa
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: jwtSecret
            - name: JWT_EXPIRE_TIME
              value: {{ .Values.jwtExpireTime | quote }}
            - name: API_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: apiKeySecret
            - name: ADMIN_EMAIL
              value: {{ .Values.adminEmail | quote }}
            - name: ADMIN_USES_EXTERNAL_AUTH
              value: {{ .Values.adminUsesExternalAuth | quote }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: adminPassword
            - name: LOCAL_LOGIN_DISABLED
              value: {{ .Values.localLoginDisabled | quote }}
            - name: REGISTRATION_DISABLED
              value: {{ .Values.registrationDisabled | quote }}
            - name: EXTERNAL_URL
              value: {{ .Values.externalUrl | quote }}
            - name: ONE_SESSION_PER_USER
              value: {{ .Values.oneSessionPerUser | quote }}
            - name: CLASSIFICATION_BANNER_TEXT
              value: {{ .Values.classificationBannerText | quote }}
            - name: CLASSIFICATION_BANNER_TEXT_COLOR
              value: {{ .Values.classificationBannerTextColor | quote }}
            - name: CLASSIFICATION_BANNER_COLOR
              value: {{ .Values.classificationBannerColor | quote }}
            - name: SPLUNK_HOST_URL
              value: {{ .Values.splunkHostUrl | quote }}
            - name: TENABLE_HOST_URL
              value: {{ .Values.tenableHostUrl | quote }}
            - name: GITHUB_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: githubClientId
            - name: GITHUB_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: githubClientSecret
            - name: GITHUB_ENTERPRISE_INSTANCE_BASE_URL
              value: {{ .Values.githubEnterpriseInstanceBaseUrl | quote }}
            - name: GITHUB_ENTERPRISE_INSTANCE_API_URL
              value: {{ .Values.githubEnterpriseInstanceApiUrl | quote }}
            - name: GITLAB_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: gitlabClientId
            - name: GITLAB_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: gitlabClientSecret
            - name: GITLAB_BASEURL
              value: {{ .Values.gitlabBaseUrl | quote }}
            - name: GOOGLE_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: googleClientId
            - name: GOOGLE_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: googleClientSecret
            - name: OKTA_DOMAIN
              value: {{ .Values.oktaDomain | quote }}
            - name: OKTA_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: oktaClientId
            - name: OKTA_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: oktaClientSecret
            - name: OIDC_NAME
              value: {{ .Values.oidcName | quote }}
            - name: OIDC_ISSUER
              value: {{ .Values.oidcIssuer | quote }}
            - name: OIDC_AUTHORIZATION_URL
              value: {{ .Values.oidcAuthorizationUrl | quote }}
            - name: OIDC_TOKEN_URL
              value: {{ .Values.oidcTokenUrl | quote }}
            - name: OIDC_USER_INFO_URL
              value: {{ .Values.oidcUserInfoUrl | quote }}
            - name: OIDC_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: oidcClientId
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: oidcClientSecret
            - name: OIDC_EXTERNAL_GROUPS
              value: {{ .Values.oidcExternalGroups | quote }}
            - name: LDAP_ENABLED
              value: {{ .Values.ldapEnabled | quote }}
            - name: LDAP_HOST
              value: {{ .Values.ldapHost | quote }}
            - name: LDAP_PORT
              value: {{ .Values.ldapPort | quote }}
            - name: LDAP_BINDDN
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: ldapBindDn
            - name: LDAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: ldapPassword
            - name: LDAP_SEARCHBASE
              value: {{ .Values.ldapSearchBase | quote }}
            - name: LDAP_SEARCHFILTER
              value: {{ .Values.ldapSearchFilter | quote }}
            - name: LDAP_NAMEFIELD
              value: {{ .Values.ldapNameField | quote }}
            - name: LDAP_MAILFIELD
              value: {{ .Values.ldapMailField | quote }}
            - name: LDAP_SSL
              value: {{ .Values.ldapSsl | quote }}
            - name: LDAP_SSL_INSECURE
              value: {{ .Values.ldapSslInsecure | quote }}
            - name: LDAP_SSL_CA
              valueFrom:
                secretKeyRef:
                  name: {{ include "heimdall.fullname" . }}
                  key: ldapSslCa
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 80
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 80
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 3
      {{- with .Values.heimdall.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.heimdall.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.heimdall.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
